[{"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 0, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 330, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 1, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 331, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 2, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 334, "label": -3, "slices": ["    if (header->bfType != 19778) {\n", "        fprintf(stderr, \"Error, not a BMP file!\\n\");\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 3, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 340, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 4, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 341, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 5, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 342, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 6, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 343, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 7, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 345, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 8, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 346, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 9, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 348, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 10, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 349, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 11, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 351, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 12, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 352, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 13, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 353, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_file_header", "Source": false, "Sink": false, "idx": 14, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 354, "label": -3, "slices": ["static OPJ_BOOL bmp_read_file_header(FILE* IN, OPJ_BITMAPFILEHEADER* header)\n", "    header->bfType  = (OPJ_UINT16)getc(IN);\n", "    header->bfType |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->bfType != 19778) {\n", "    header->bfSize  = (OPJ_UINT32)getc(IN);\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->bfReserved1  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved1 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfReserved2  = (OPJ_UINT16)getc(IN);\n", "    header->bfReserved2 |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->bfOffBits  = (OPJ_UINT32)getc(IN);\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->bfOffBits |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 15, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "memset", "line": 359, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 16, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 362, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 17, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 363, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 18, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 364, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 19, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 365, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 20, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 376, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 21, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 380, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 22, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 381, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 23, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 382, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 24, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 383, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 25, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 385, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 26, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 386, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 27, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 387, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 28, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 388, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 29, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 390, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 30, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 391, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 31, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 393, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 32, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 394, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 33, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 396, "label": -3, "slices": ["    switch (header->biSize) {\n", "    if (header->biBitCount == 0) {\n", "        fprintf(stderr, \"Error, invalid biBitCount %d\\n\", 0);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 34, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 401, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 35, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 402, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 36, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 403, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 37, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 404, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 38, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 406, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 39, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 407, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 40, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 408, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 41, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 409, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 42, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 411, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 43, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 412, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 44, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 413, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 45, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 414, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 46, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 416, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 47, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 417, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 48, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 418, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 49, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 419, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 50, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 421, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 51, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 422, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 52, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 423, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 53, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 424, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 54, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 426, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 55, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 427, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 56, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 428, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 57, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 429, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 58, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 433, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 59, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 434, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 60, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 435, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 61, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 436, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 62, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 439, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 63, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 443, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 64, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 444, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 65, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 445, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 66, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 446, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 67, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 449, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 68, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 453, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 69, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 454, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 70, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 455, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 71, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 456, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 72, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 459, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 73, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 463, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 74, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 464, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 75, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 465, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 76, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 466, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 77, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 470, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 78, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 471, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 79, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 472, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 80, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 473, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 81, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fread", "line": 475, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 82, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 477, "label": -3, "slices": ["    switch (header->biSize) {\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 56U) {\n", "        if (!header->biRedMask) {\n", "        if (!header->biGreenMask) {\n", "        if (!header->biBlueMask) {\n", "    if (header->biSize >= 108U) {\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "            fprintf(stderr, \"Error, can't  read BMP header\\n\");\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 83, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 481, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 84, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 482, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 85, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 483, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 86, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 484, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 87, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 486, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 88, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 487, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 89, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 488, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 90, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 489, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 91, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 491, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 92, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 492, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 93, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 493, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 94, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 494, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 95, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 498, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 96, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 499, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 97, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 500, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 98, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 501, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 99, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 503, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 100, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 504, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 101, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 505, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 102, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 506, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 103, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 508, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 104, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 509, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 105, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 510, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 106, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 511, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 107, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 513, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 108, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 514, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 109, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 515, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_info_header", "Source": false, "Sink": false, "idx": 110, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 516, "label": -3, "slices": ["static OPJ_BOOL bmp_read_info_header(FILE* IN, OPJ_BITMAPINFOHEADER* header)\n", "    memset(header, 0, sizeof(*header));\n", "    header->biSize  = (OPJ_UINT32)getc(IN);\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biSize |= (OPJ_UINT32)getc(IN) << 24;\n", "    switch (header->biSize) {\n", "        fprintf(stderr, \"Error, unknown BMP header size %d\\n\", header->biSize);\n", "    header->biWidth  = (OPJ_UINT32)getc(IN);\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biWidth |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biHeight  = (OPJ_UINT32)getc(IN);\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 8;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 16;\n", "    header->biHeight |= (OPJ_UINT32)getc(IN) << 24;\n", "    header->biPlanes  = (OPJ_UINT16)getc(IN);\n", "    header->biPlanes |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    header->biBitCount  = (OPJ_UINT16)getc(IN);\n", "    header->biBitCount |= (OPJ_UINT16)((OPJ_UINT32)getc(IN) << 8);\n", "    if (header->biBitCount == 0) {\n", "    if (header->biSize >= 40U) {\n", "        header->biCompression  = (OPJ_UINT32)getc(IN);\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biCompression |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biSizeImage  = (OPJ_UINT32)getc(IN);\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biSizeImage |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biXpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biXpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biYpelsPerMeter  = (OPJ_UINT32)getc(IN);\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biYpelsPerMeter |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrUsed  = (OPJ_UINT32)getc(IN);\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrUsed |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biClrImportant  = (OPJ_UINT32)getc(IN);\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biClrImportant |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 56U) {\n", "        header->biRedMask  = (OPJ_UINT32)getc(IN);\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biRedMask) {\n", "            fprintf(stderr, \"Error, invalid red mask value %d\\n\", header->biRedMask);\n", "        header->biGreenMask  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biGreenMask) {\n", "            fprintf(stderr, \"Error, invalid green mask value %d\\n\", header->biGreenMask);\n", "        header->biBlueMask  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueMask |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (!header->biBlueMask) {\n", "            fprintf(stderr, \"Error, invalid blue mask value %d\\n\", header->biBlueMask);\n", "        header->biAlphaMask  = (OPJ_UINT32)getc(IN);\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biAlphaMask |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 108U) {\n", "        header->biColorSpaceType  = (OPJ_UINT32)getc(IN);\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biColorSpaceType |= (OPJ_UINT32)getc(IN) << 24;\n", "        if (fread(&(header->biColorSpaceEP), 1U, sizeof(header->biColorSpaceEP),\n                  IN) != sizeof(header->biColorSpaceEP)) {\n", "        header->biRedGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biRedGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biGreenGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biGreenGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biBlueGamma  = (OPJ_UINT32)getc(IN);\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biBlueGamma |= (OPJ_UINT32)getc(IN) << 24;\n", "    if (header->biSize >= 124U) {\n", "        header->biIntent  = (OPJ_UINT32)getc(IN);\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIntent |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileData  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileData |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biIccProfileSize  = (OPJ_UINT32)getc(IN);\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biIccProfileSize |= (OPJ_UINT32)getc(IN) << 24;\n", "        header->biReserved  = (OPJ_UINT32)getc(IN);\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 8;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 16;\n", "        header->biReserved |= (OPJ_UINT32)getc(IN) << 24;\n"]}, {"FileName": "before.c", "Caller": "bmp_read_raw_data", "Source": false, "Sink": false, "idx": 111, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fread", "line": 526, "label": -3, "slices": ["static OPJ_BOOL bmp_read_raw_data(FILE* IN, OPJ_UINT8* pData, OPJ_UINT32 stride,\n                                  OPJ_UINT32 width, OPJ_UINT32 height)\n", "                                  OPJ_UINT32 width, OPJ_UINT32 height)\n"]}, {"FileName": "before.c", "Caller": "bmp_read_raw_data", "Source": false, "Sink": false, "idx": 112, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 527, "label": -3, "slices": ["    if (fread(pData, sizeof(OPJ_UINT8), stride * height, IN) != (stride * height)) {\n", "        fprintf(stderr,\n                \"\\nError: fread return a number of element different from the expected.\\n\");\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 113, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 546, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                y += (OPJ_UINT32)c;\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 114, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 555, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            OPJ_UINT8 c1;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "            c1 = (OPJ_UINT8)c1_int;\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = c1;\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    OPJ_UINT8 c1;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                    c1 = (OPJ_UINT8)c1_int;\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 115, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 566, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                y += (OPJ_UINT32)c;\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 116, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 578, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            OPJ_UINT8 c1;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = c1;\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                y += (OPJ_UINT32)c;\n", "                pix = pData + y * stride + x;\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    OPJ_UINT8 c1;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                    *pix = c1;\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 117, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 583, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            OPJ_UINT8 c1;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = c1;\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                y += (OPJ_UINT32)c;\n", "                pix = pData + y * stride + x;\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    OPJ_UINT8 c1;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                    *pix = c1;\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 118, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 595, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            OPJ_UINT8 c1;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "            c1 = (OPJ_UINT8)c1_int;\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    OPJ_UINT8 c1;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                    c1 = (OPJ_UINT8)c1_int;\n", "                    *pix = c1;\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle8_data", "Source": false, "Sink": false, "idx": 119, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 603, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle8_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) {\n", "            int j, c1_int;\n", "            c1_int = getc(IN);\n", "            if (c1_int == EOF) {\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                if (c == EOF) {\n", "                y += (OPJ_UINT32)c;\n", "else\n", "                int j;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    int c1_int;\n", "                    c1_int = getc(IN);\n", "                    if (c1_int == EOF) {\n", "                if ((OPJ_UINT32)c & 1U) { /* skip padding byte */\n", "                    c = getc(IN);\n", "                    if (c == EOF) {\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 120, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 625, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                y += (OPJ_UINT32)c;\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 121, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 632, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                c = getc(IN);\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                    *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 122, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 639, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                y += (OPJ_UINT32)c;\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 123, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 651, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                y += (OPJ_UINT32)c;\n", "                pix = pData + y * stride + x;\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                    *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 124, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 653, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "                y++;\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                x += (OPJ_UINT32)c;\n", "                c = getc(IN);\n", "                y += (OPJ_UINT32)c;\n", "                pix = pData + y * stride + x;\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                    *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 125, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 663, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "            for (j = 0; (j < c) && (x < width) &&\n                    ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                c = getc(IN);\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                    *pix = (OPJ_UINT8)((j & 1) ? (c1 & 0x0fU) : ((c1 >> 4) & 0x0fU));\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmp_read_rle4_data", "Source": false, "Sink": false, "idx": 126, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 668, "label": -3, "slices": ["static OPJ_BOOL bmp_read_rle4_data(FILE* IN, OPJ_UINT8* pData,\n                                   OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)\n", "    OPJ_UINT32 x, y;\n", "    OPJ_UINT8 *pix;\n", "    const OPJ_UINT8 *beyond;\n", "    while (y < height) {\n", "        int c = getc(IN);\n", "        if (c == EOF) {\n", "        if (c) { /* encoded mode */\n", "            int j;\n", "            OPJ_UINT8 c1 = (OPJ_UINT8)getc(IN);\n", "else\n", "            c = getc(IN);\n", "            if (c == EOF) {\n", "            if (c == 0x00) { /* EOL */\n", "else\n", "            } else if (c == 0x01) { /* EOP */\n", "else\n", "            } else if (c == 0x02) { /* MOVE by dxdy */\n", "                c = getc(IN);\n", "                c = getc(IN);\n", "else\n", "                int j;\n", "                OPJ_UINT8 c1 = 0U;\n", "                for (j = 0; (j < c) && (x < width) &&\n                        ((OPJ_SIZE_T)pix < (OPJ_SIZE_T)beyond); j++, x++, pix++) {\n", "                    if ((j & 1) == 0) {\n", "                        c1 = (OPJ_UINT8)getc(IN);\n", "                if (((c & 3) == 1) || ((c & 3) == 2)) { /* skip padding byte */\n", "                    getc(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 127, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fopen", "line": 694, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    opj_image_cmptparm_t cmptparm[4];   /* maximum of 4 components */\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "        fprintf(stderr, \"Failed to open %s for reading !!\\n\", filename);\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    for (i = 0; i < 4U; i++) {\n", "        cmptparm[i].prec = 8;\n", "        cmptparm[i].bpp  = 8;\n", "        cmptparm[i].sgnd = 0;\n", "        cmptparm[i].dx   = (OPJ_UINT32)parameters->subsampling_dx;\n", "        cmptparm[i].dy   = (OPJ_UINT32)parameters->subsampling_dy;\n", "        cmptparm[i].w    = Info_h.biWidth;\n", "        cmptparm[i].h    = Info_h.biHeight;\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 128, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 696, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    FILE *IN;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "        fprintf(stderr, \"Failed to open %s for reading !!\\n\", filename);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 129, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 701, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 130, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 705, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 131, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "memset", "line": 711, "label": -3, "slices": ["    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    pLUT[0] = lut_R;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_R[0], 0, sizeof(lut_R));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 132, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "memset", "line": 712, "label": -3, "slices": ["    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    pLUT[1] = lut_G;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_G[0], 0, sizeof(lut_G));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 133, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "memset", "line": 713, "label": -3, "slices": ["    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    pLUT[2] = lut_B;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_B[0], 0, sizeof(lut_B));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 134, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 725, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    pLUT[2] = lut_B;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_B[0], 0, sizeof(lut_B));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 135, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 726, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    pLUT[1] = lut_G;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_G[0], 0, sizeof(lut_G));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 136, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 727, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    opj_image_cmptparm_t cmptparm[4];   /* maximum of 4 components */\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    pLUT[0] = lut_R;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        memset(&lut_R[0], 0, sizeof(lut_R));\n", "        if (palette_len > 0U) {\n", "            OPJ_UINT8 has_color = 0U;\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "                has_color |= (lut_B[i] ^ lut_G[i]) | (lut_G[i] ^ lut_R[i]);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    for (i = 0; i < 4U; i++) {\n", "        cmptparm[i].prec = 8;\n", "        cmptparm[i].bpp  = 8;\n", "        cmptparm[i].sgnd = 0;\n", "        cmptparm[i].dx   = (OPJ_UINT32)parameters->subsampling_dx;\n", "        cmptparm[i].dy   = (OPJ_UINT32)parameters->subsampling_dy;\n", "        cmptparm[i].w    = Info_h.biWidth;\n", "        cmptparm[i].h    = Info_h.biHeight;\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 137, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "getc", "line": 728, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 138, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 743, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 139, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 748, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 140, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 756, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 141, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 763, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 142, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "calloc", "line": 766, "label": -3, "slices": ["    opj_image_cmptparm_t cmptparm[4];   /* maximum of 4 components */\n", "    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biBitCount <= 8U) {\n", "        palette_len = Info_h.biClrUsed;\n", "        if ((palette_len == 0U) && (Info_h.biBitCount <= 8U)) {\n", "            palette_len = (1U << Info_h.biBitCount);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) *\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    pData = (OPJ_UINT8 *) calloc(1, sizeof(OPJ_UINT8) * stride * Info_h.biHeight);\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        free(pData);\n", "    for (i = 0; i < 4U; i++) {\n", "        cmptparm[i].w    = Info_h.biWidth;\n", "        cmptparm[i].h    = Info_h.biHeight;\n", "    if (!image) {\n", "        free(pData);\n", "    image->x1 = image->x0 + (Info_h.biWidth  - 1U) * (OPJ_UINT32)\n", "    image->y1 = image->y0 + (Info_h.biHeight - 1U) * (OPJ_UINT32)\n", "    if (Info_h.biBitCount == 24 && Info_h.biCompression == 0) { /*RGB */\n", "else\n", "    } else if (Info_h.biBitCount == 8 &&\n               Info_h.biCompression == 0) { /* RGB 8bpp Indexed */\n", "else\n", "    } else if (Info_h.biBitCount == 8 && Info_h.biCompression == 1) { /*RLE8*/\n", "else\n", "    } else if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /*RLE4*/\n", "        bmp8toimage(pData, stride, image,\n                    pLUT); /* RLE 4 gets decoded as 8 bits data for now */\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 0) { /* RGBX */\n", "        bmpmask32toimage(pData, stride, image, 0x00FF0000U, 0x0000FF00U, 0x000000FFU,\n                         0x00000000U);\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 3) { /* bitmask */\n", "        if ((Info_h.biRedMask == 0U) && (Info_h.biGreenMask == 0U) &&\n                (Info_h.biBlueMask == 0U)) {\n", "            Info_h.biRedMask   = 0x00FF0000U;\n", "            Info_h.biGreenMask = 0x0000FF00U;\n", "            Info_h.biBlueMask  = 0x000000FFU;\n", "        bmpmask32toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 3) { /* bitmask */\n", "        if ((Info_h.biRedMask == 0U) && (Info_h.biGreenMask == 0U) &&\n                (Info_h.biBlueMask == 0U)) {\n", "            Info_h.biRedMask   = 0xF800U;\n", "            Info_h.biGreenMask = 0x07E0U;\n", "            Info_h.biBlueMask  = 0x001FU;\n", "        bmpmask16toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "        fprintf(stderr,\n                \"Other system than 24 bits/pixels or 8 bits (no RLE coding) is not yet implemented [%d]\\n\",\n                Info_h.biBitCount);\n", "    free(pData);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 143, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 768, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 144, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 793, "label": -3, "slices": ["    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        fprintf(stderr, \"Unsupported BMP compression\\n\");\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 145, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "free", "line": 798, "label": -3, "slices": ["    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) *\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    pData = (OPJ_UINT8 *) calloc(1, sizeof(OPJ_UINT8) * stride * Info_h.biHeight);\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        free(pData);\n", "    if (!image) {\n", "        free(pData);\n", "    if (Info_h.biBitCount == 24 && Info_h.biCompression == 0) { /*RGB */\n", "else\n", "    } else if (Info_h.biBitCount == 8 &&\n               Info_h.biCompression == 0) { /* RGB 8bpp Indexed */\n", "else\n", "    } else if (Info_h.biBitCount == 8 && Info_h.biCompression == 1) { /*RLE8*/\n", "else\n", "    } else if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /*RLE4*/\n", "        bmp8toimage(pData, stride, image,\n                    pLUT); /* RLE 4 gets decoded as 8 bits data for now */\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 0) { /* RGBX */\n", "        bmpmask32toimage(pData, stride, image, 0x00FF0000U, 0x0000FF00U, 0x000000FFU,\n                         0x00000000U);\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask32toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask16toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "    free(pData);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 146, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 799, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 147, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "memset", "line": 804, "label": -3, "slices": ["    opj_image_cmptparm_t cmptparm[4];   /* maximum of 4 components */\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    if (pData == NULL) {\n", "    if (!l_result) {\n", "    memset(&cmptparm[0], 0, sizeof(cmptparm));\n", "    for (i = 0; i < 4U; i++) {\n", "        cmptparm[i].prec = 8;\n", "        cmptparm[i].bpp  = 8;\n", "        cmptparm[i].sgnd = 0;\n", "        cmptparm[i].dx   = (OPJ_UINT32)parameters->subsampling_dx;\n", "        cmptparm[i].dy   = (OPJ_UINT32)parameters->subsampling_dy;\n", "        cmptparm[i].w    = Info_h.biWidth;\n", "        cmptparm[i].h    = Info_h.biHeight;\n", "    image = opj_image_create(numcmpts, &cmptparm[0],\n                             (numcmpts == 1U) ? OPJ_CLRSPC_GRAY : OPJ_CLRSPC_SRGB);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 148, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 818, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 149, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "free", "line": 819, "label": -3, "slices": ["    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) *\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    pData = (OPJ_UINT8 *) calloc(1, sizeof(OPJ_UINT8) * stride * Info_h.biHeight);\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        free(pData);\n", "    if (!image) {\n", "        free(pData);\n", "    if (Info_h.biBitCount == 24 && Info_h.biCompression == 0) { /*RGB */\n", "else\n", "    } else if (Info_h.biBitCount == 8 &&\n               Info_h.biCompression == 0) { /* RGB 8bpp Indexed */\n", "else\n", "    } else if (Info_h.biBitCount == 8 && Info_h.biCompression == 1) { /*RLE8*/\n", "else\n", "    } else if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /*RLE4*/\n", "        bmp8toimage(pData, stride, image,\n                    pLUT); /* RLE 4 gets decoded as 8 bits data for now */\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 0) { /* RGBX */\n", "        bmpmask32toimage(pData, stride, image, 0x00FF0000U, 0x0000FF00U, 0x000000FFU,\n                         0x00000000U);\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask32toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask16toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "    free(pData);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 150, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 871, "label": -3, "slices": ["    opj_image_cmptparm_t cmptparm[4];   /* maximum of 4 components */\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biBitCount <= 8U) {\n", "        palette_len = Info_h.biClrUsed;\n", "        if ((palette_len == 0U) && (Info_h.biBitCount <= 8U)) {\n", "            palette_len = (1U << Info_h.biBitCount);\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) *\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    pData = (OPJ_UINT8 *) calloc(1, sizeof(OPJ_UINT8) * stride * Info_h.biHeight);\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "    for (i = 0; i < 4U; i++) {\n", "        cmptparm[i].w    = Info_h.biWidth;\n", "        cmptparm[i].h    = Info_h.biHeight;\n", "    if (!image) {\n", "    image->x1 = image->x0 + (Info_h.biWidth  - 1U) * (OPJ_UINT32)\n", "    image->y1 = image->y0 + (Info_h.biHeight - 1U) * (OPJ_UINT32)\n", "    if (Info_h.biBitCount == 24 && Info_h.biCompression == 0) { /*RGB */\n", "else\n", "    } else if (Info_h.biBitCount == 8 &&\n               Info_h.biCompression == 0) { /* RGB 8bpp Indexed */\n", "else\n", "    } else if (Info_h.biBitCount == 8 && Info_h.biCompression == 1) { /*RLE8*/\n", "else\n", "    } else if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /*RLE4*/\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 3) { /* bitmask */\n", "        if ((Info_h.biRedMask == 0U) && (Info_h.biGreenMask == 0U) &&\n                (Info_h.biBlueMask == 0U)) {\n", "            Info_h.biRedMask   = 0x00FF0000U;\n", "            Info_h.biGreenMask = 0x0000FF00U;\n", "            Info_h.biBlueMask  = 0x000000FFU;\n", "        bmpmask32toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 3) { /* bitmask */\n", "        if ((Info_h.biRedMask == 0U) && (Info_h.biGreenMask == 0U) &&\n                (Info_h.biBlueMask == 0U)) {\n", "            Info_h.biRedMask   = 0xF800U;\n", "            Info_h.biGreenMask = 0x07E0U;\n", "            Info_h.biBlueMask  = 0x001FU;\n", "        bmpmask16toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "        fprintf(stderr,\n                \"Other system than 24 bits/pixels or 8 bits (no RLE coding) is not yet implemented [%d]\\n\",\n                Info_h.biBitCount);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 151, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "free", "line": 875, "label": -3, "slices": ["    OPJ_UINT8 const* pLUT[3];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "    stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) *\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "    pData = (OPJ_UINT8 *) calloc(1, sizeof(OPJ_UINT8) * stride * Info_h.biHeight);\n", "    if (pData == NULL) {\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        free(pData);\n", "    if (!image) {\n", "        free(pData);\n", "    if (Info_h.biBitCount == 24 && Info_h.biCompression == 0) { /*RGB */\n", "else\n", "    } else if (Info_h.biBitCount == 8 &&\n               Info_h.biCompression == 0) { /* RGB 8bpp Indexed */\n", "else\n", "    } else if (Info_h.biBitCount == 8 && Info_h.biCompression == 1) { /*RLE8*/\n", "else\n", "    } else if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /*RLE4*/\n", "        bmp8toimage(pData, stride, image,\n                    pLUT); /* RLE 4 gets decoded as 8 bits data for now */\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 0) { /* RGBX */\n", "        bmpmask32toimage(pData, stride, image, 0x00FF0000U, 0x0000FF00U, 0x000000FFU,\n                         0x00000000U);\n", "else\n", "    } else if (Info_h.biBitCount == 32 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask32toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 0) { /* RGBX */\n", "else\n", "    } else if (Info_h.biBitCount == 16 && Info_h.biCompression == 3) { /* bitmask */\n", "        bmpmask16toimage(pData, stride, image, Info_h.biRedMask, Info_h.biGreenMask,\n                         Info_h.biBlueMask, Info_h.biAlphaMask);\n", "    free(pData);\n"]}, {"FileName": "before.c", "Caller": "bmptoimage", "Source": false, "Sink": false, "idx": 152, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 876, "label": -3, "slices": ["opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)\n", "    OPJ_UINT8 lut_R[256], lut_G[256], lut_B[256];\n", "    opj_image_t * image = NULL;\n", "    FILE *IN;\n", "    OPJ_BITMAPFILEHEADER File_h;\n", "    OPJ_BITMAPINFOHEADER Info_h;\n", "    OPJ_UINT32 i, palette_len, numcmpts = 1U;\n", "    OPJ_BOOL l_result = OPJ_FALSE;\n", "    OPJ_UINT8* pData = NULL;\n", "    OPJ_UINT32 stride;\n", "    IN = fopen(filename, \"rb\");\n", "    if (!IN) {\n", "    if (!bmp_read_file_header(IN, &File_h)) {\n", "        fclose(IN);\n", "    if (!bmp_read_info_header(IN, &Info_h)) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount <= 8U) {\n", "        if (palette_len > 0U) {\n", "            for (i = 0U; i < palette_len; i++) {\n", "                lut_B[i] = (OPJ_UINT8)getc(IN);\n", "                lut_G[i] = (OPJ_UINT8)getc(IN);\n", "                lut_R[i] = (OPJ_UINT8)getc(IN);\n", "                (void)getc(IN); /* padding */\n", "    if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "        fclose(IN);\n", "    if (Info_h.biBitCount == 4 &&\n            Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */\n", "        if (8 > (((OPJ_UINT32) - 1) - 31) / Info_h.biWidth) {\n", "            fclose(IN);\n", "    if (stride > ((OPJ_UINT32) - 1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {\n", "        fclose(IN);\n", "    if (pData == NULL) {\n", "        fclose(IN);\n", "    fseek(IN, 0, SEEK_SET);\n", "    fseek(IN, (long)File_h.bfOffBits, SEEK_SET);\n", "    switch (Info_h.biCompression) {\n", "        l_result = bmp_read_raw_data(IN, pData, stride, Info_h.biWidth,\n                                     Info_h.biHeight);\n", "        l_result = bmp_read_rle8_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "        l_result = bmp_read_rle4_data(IN, pData, stride, Info_h.biWidth,\n                                      Info_h.biHeight);\n", "    if (!l_result) {\n", "        fclose(IN);\n", "    if (!image) {\n", "        fclose(IN);\n", "    fclose(IN);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 153, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 888, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    int adjustR, adjustG, adjustB;\n", "    if (image->comps[0].prec < 8) {\n", "        fprintf(stderr, \"imagetobmp: Unsupported precision: %d\\n\",\n                image->comps[0].prec);\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 0 from %d bits to 8 bits\\n\",\n                   image->comps[0].prec);\n", "        if (image->comps[1].prec > 8) {\n", "            adjustG = (int)image->comps[1].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 1 from %d bits to 8 bits\\n\",\n                   image->comps[1].prec);\n", "        if (image->comps[2].prec > 8) {\n", "            adjustB = (int)image->comps[2].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 2 from %d bits to 8 bits\\n\",\n                   image->comps[2].prec);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g += (image->comps[1].sgnd ? 1 << (image->comps[1].prec - 1) : 0);\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b += (image->comps[2].sgnd ? 1 << (image->comps[2].prec - 1) : 0);\n", "        if (!fdest) {\n", "        if (image->numcomps > 1) {\n", "            fprintf(stderr, \"imagetobmp: only first component of %d is used.\\n\",\n                    image->numcomps);\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 0 from %d bits to 8 bits\\n\",\n                   image->comps[0].prec);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 154, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fopen", "line": 905, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 155, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 907, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 156, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 914, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 157, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 918, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "            int r;\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 158, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 923, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 159, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 925, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 160, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 930, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 161, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 932, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "            int r;\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 162, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 936, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "            int r;\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 163, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 940, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 164, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 941, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 165, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 942, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 166, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 944, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "            int r;\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 167, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 948, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 168, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 950, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 169, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 952, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 170, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 954, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 171, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1019, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    int adjustR, adjustG, adjustB;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "else\n", "            adjustR = 0;\n", "        if (image->comps[1].prec > 8) {\n", "            adjustG = (int)image->comps[1].prec - 8;\n", "else\n", "            adjustG = 0;\n", "        if (image->comps[2].prec > 8) {\n", "            adjustB = (int)image->comps[2].prec - 8;\n", "else\n", "            adjustB = 0;\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n", "            if (adjustR > 0) {\n", "                r = ((r >> adjustR) + ((r >> (adjustR - 1)) % 2));\n", "            if (r > 255) {\n", "else\n", "            } else if (r < 0) {\n", "                r = 0;\n", "            rc = (OPJ_UINT8)r;\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g += (image->comps[1].sgnd ? 1 << (image->comps[1].prec - 1) : 0);\n", "            if (adjustG > 0) {\n", "                g = ((g >> adjustG) + ((g >> (adjustG - 1)) % 2));\n", "            if (g > 255) {\n", "else\n", "            } else if (g < 0) {\n", "                g = 0;\n", "            gc = (OPJ_UINT8)g;\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b += (image->comps[2].sgnd ? 1 << (image->comps[2].prec - 1) : 0);\n", "            if (adjustB > 0) {\n", "                b = ((b >> adjustB) + ((b >> (adjustB - 1)) % 2));\n", "            if (b > 255) {\n", "else\n", "            } else if (b < 0) {\n", "                b = 0;\n", "            bc = (OPJ_UINT8)b;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "            int r;\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 172, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1023, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 173, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 1027, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 174, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fopen", "line": 1034, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\",\n                (OPJ_UINT8)(h * w * 3 + 3 * h * (w % 2) + 54) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2) + 54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54) & 0xff, ((54) >> 8) & 0xff, ((54) >> 16) & 0xff,\n                ((54) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (24) & 0xff, ((24) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(3 * h * w + 3 * h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w * 3 + 3 * h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        for (i = 0; i < w * h; i++) {\n", "            OPJ_UINT8 rc, gc, bc;\n", "            int r, g, b;\n", "            fprintf(fdest, \"%c%c%c\", bc, gc, rc);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = ((3 * w) % 4) ? (4 - (3 * w) % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 175, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1036, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "            fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 176, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1040, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    int adjustR, adjustG, adjustB;\n", "    if (image->comps[0].prec < 8) {\n", "        fprintf(stderr, \"imagetobmp: Unsupported precision: %d\\n\",\n                image->comps[0].prec);\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 0 from %d bits to 8 bits\\n\",\n                   image->comps[0].prec);\n", "        if (image->comps[1].prec > 8) {\n", "            adjustG = (int)image->comps[1].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 1 from %d bits to 8 bits\\n\",\n                   image->comps[1].prec);\n", "        if (image->comps[2].prec > 8) {\n", "            adjustB = (int)image->comps[2].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 2 from %d bits to 8 bits\\n\",\n                   image->comps[2].prec);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r, g, b;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n", "            g = image->comps[1].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            g += (image->comps[1].sgnd ? 1 << (image->comps[1].prec - 1) : 0);\n", "            b = image->comps[2].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            b += (image->comps[2].sgnd ? 1 << (image->comps[2].prec - 1) : 0);\n", "        if (!fdest) {\n", "        if (image->numcomps > 1) {\n", "            fprintf(stderr, \"imagetobmp: only first component of %d is used.\\n\",\n                    image->numcomps);\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "            printf(\"BMP CONVERSION: Truncating component 0 from %d bits to 8 bits\\n\",\n                   image->comps[0].prec);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 177, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1046, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 178, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1050, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 179, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1054, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 180, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1056, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 181, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1062, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 182, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1064, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 183, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1068, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 184, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1072, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 185, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1073, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 186, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1074, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 187, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1076, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 188, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1080, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 189, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1082, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 190, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1084, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 191, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1086, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 192, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1098, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 193, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1115, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    int adjustR, adjustG, adjustB;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        w = (int)image->comps[0].w;\n", "        h = (int)image->comps[0].h;\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        if (image->comps[0].prec > 8) {\n", "            adjustR = (int)image->comps[0].prec - 8;\n", "else\n", "            adjustR = 0;\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            r = image->comps[0].data[w * h - ((i) / (w) + 1) * w + (i) % (w)];\n", "            r += (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);\n", "            if (adjustR > 0) {\n", "                r = ((r >> adjustR) + ((r >> (adjustR - 1)) % 2));\n", "            if (r > 255) {\n", "else\n", "            } else if (r < 0) {\n", "                r = 0;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 194, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fprintf", "line": 1119, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}, {"FileName": "before.c", "Caller": "imagetobmp", "Source": false, "Sink": false, "idx": 195, "CWE-ID": "CWE-", "category": "CallExpression", "criterion": "fclose", "line": 1123, "label": -3, "slices": ["int imagetobmp(opj_image_t * image, const char *outfile)\n", "    int w, h;\n", "    int i, pad;\n", "    FILE *fdest = NULL;\n", "    if (image->comps[0].prec < 8) {\n", "    if (image->numcomps >= 3 && image->comps[0].dx == image->comps[1].dx\n            && image->comps[1].dx == image->comps[2].dx\n            && image->comps[0].dy == image->comps[1].dy\n            && image->comps[1].dy == image->comps[2].dy\n            && image->comps[0].prec == image->comps[1].prec\n            && image->comps[1].prec == image->comps[2].prec\n            && image->comps[0].sgnd == image->comps[1].sgnd\n            && image->comps[1].sgnd == image->comps[2].sgnd) {\n", "            int r, g, b;\n", "else\n", "        fdest = fopen(outfile, \"wb\");\n", "        if (!fdest) {\n", "        fprintf(fdest, \"BM\");\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + 54 + 1024 + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 8) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + 54 + 1024 + w * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (54 + 1024) & 0xff, ((54 + 1024) >> 8) & 0xff,\n                ((54 + 1024) >> 16) & 0xff,\n                ((54 + 1024) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (40) & 0xff, ((40) >> 8) & 0xff, ((40) >> 16) & 0xff,\n                ((40) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((w) & 0xff),\n                (OPJ_UINT8)((w) >> 8) & 0xff,\n                (OPJ_UINT8)((w) >> 16) & 0xff,\n                (OPJ_UINT8)((w) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)((h) & 0xff),\n                (OPJ_UINT8)((h) >> 8) & 0xff,\n                (OPJ_UINT8)((h) >> 16) & 0xff,\n                (OPJ_UINT8)((h) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (1) & 0xff, ((1) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c\", (8) & 0xff, ((8) >> 8) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (0) & 0xff, ((0) >> 8) & 0xff, ((0) >> 16) & 0xff,\n                ((0) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (OPJ_UINT8)(h * w + h * (w % 2)) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 8) &  0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 16) & 0xff,\n                (OPJ_UINT8)((h * w + h * (w % 2)) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (7834) & 0xff, ((7834) >> 8) & 0xff,\n                ((7834) >> 16) & 0xff, ((7834) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        fprintf(fdest, \"%c%c%c%c\", (256) & 0xff, ((256) >> 8) & 0xff,\n                ((256) >> 16) & 0xff, ((256) >> 24) & 0xff);\n", "        for (i = 0; i < 256; i++) {\n", "            fprintf(fdest, \"%c%c%c%c\", i, i, i, 0);\n", "        for (i = 0; i < w * h; i++) {\n", "            int r;\n", "            fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n", "            if ((i + 1) % w == 0) {\n", "                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--) { /* ADD */\n", "                    fprintf(fdest, \"%c\", 0);\n", "        fclose(fdest);\n"]}]